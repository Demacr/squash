version: "{build}"

environment:
  matrix:
  # MSVC
  - GENERATOR: Visual Studio 15 2017
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - GENERATOR: Visual Studio 15 2017 Win64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - GENERATOR: Visual Studio 14 2015
  - GENERATOR: Visual Studio 14 2015 Win64

  # Clang targeting MSVC
  - GENERATOR: NMake Makefiles
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    CC: clang-cl
    CXX: clang-cl

  # Mingw-w64
  - GENERATOR: MinGW Makefiles

  # Clang targeting mingw-w64
  - GENERATOR: MinGW Makefiles
    CC: clang --target=x86_64-w64-mingw32
    CXX: clang++ --target=x86_64-w64-mingw32

branches:
  except:
    - /^(wip\/)?(travis|osx|ipp)(\-.+)?$/
    - /^master$/

configuration: Debug

install:
  - git submodule -q update --init --recursive
  - ps: |
      if ($env:GENERATOR -eq "MinGW Makefiles") {
        cinst mingw | Out-Null

        # Chocolatey sometimes fails to download
        if (!$?) {
          throw 'cinst mingw failed'
        }

        # Workaround for Chocolatey shims being first on path
        $env:Path = 'C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin;' + $env:Path
        gcc --version

        # Workaround for CMake not wanting sh.exe on PATH for MinGW Makefiles
        $env:Path = $env:Path -replace 'C:\\Program Files\\Git\\usr\\bin;',$null
      }
  - if "%CC%" == "clang-cl" ( call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat" )
  - cmake --version

before_build:
  - ps: |
      mkdir build
      cd build

      # Run CMake, disable plugins based on compiler
      if ($env:GENERATOR -like 'Visual Studio*') {
        cmake -G "$env:GENERATOR" -DCMAKE_BUILD_TYPE="$env:CONFIGURATION" -DENABLE_DENSITY=no -DENABLE_GIPFELI=no ..
      } else {
        if ($env:CC -like 'clang*') {
          cmake -G "$env:GENERATOR" -DCMAKE_BUILD_TYPE="$env:CONFIGURATION" -DCMAKE_VERBOSE_MAKEFILE=ON -DENABLE_BROTLI=no -DENABLE_GIPFELI=no -DENABLE_LZHAM=no -DENABLE_LZO=no ..
        } else {
          cmake -G "$env:GENERATOR" -DCMAKE_BUILD_TYPE="$env:CONFIGURATION" -DCMAKE_VERBOSE_MAKEFILE=ON ..
        }
      }

build_script: cmake --build . --config %CONFIGURATION%

test_script: ctest -V --interactive-debug-mode 0 --timeout 600 -C %CONFIGURATION%
